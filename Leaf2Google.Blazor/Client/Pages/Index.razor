@page "/{SelectedVin?}"
@using Leaf2Google.Models.Car
@inject IRequestService RequestService
@implements IDisposable
@attribute [Authorize]

<PageTitle>Home</PageTitle>

<div class="row flex-column flex-md-row w-100 flex-grow-1 g-2 pb-2">
    <div class="col col-12 col-md-9 flex-fill">
        <MapControl @ref="mapControl" MapData="@Map" />
    </div>
    <div class="col-12 col-md-3">
        <div class="row flex-shrink-1 g-2 py-1">
            <div class="col col-4 col-sm-2 col-md-6 col-lg-6">
                <div class="ratio ratio-1x1 bg-dark text-primary shadow rounded-3">
                    <div class="d-flex justify-content-center align-items-center">
                        <i class="fa-3x fa-regular fa-lightbulb"></i>
                    </div>
                </div>
            </div>
            <div class="col col-4 col-sm-2 col-md-6 col-lg-6">
                <div class="ratio ratio-1x1 bg-dark text-primary shadow rounded-3">
                    <div class="d-flex justify-content-center align-items-center">
                        <i class="fa-3x fa-solid fa-bullhorn"></i>
                    </div>
                </div>
            </div>
            <div class="col col-4 col-sm-2 col-md-6 col-lg-6">
                <div class="ratio ratio-1x1 bg-dark text-primary shadow rounded-3">
                    <div class="d-flex justify-content-center align-items-center">
                        <i class="fa-3x fa-solid fa-lock"></i>
                    </div>
                </div>
            </div>
            @*
            <div class="col col-md-12">
            <BatteryControl ChargeData="@Charge" />
            </div>
            *@
        </div>
    </div>
</div>
<div class="row w-100 row-cols-2 row-cols-sm-3 row-cols-md-auto justify-content-between align-items-end flex-shrink-1 action-scroller g-2 pb-2">
    <div class="col flex-grow-1 pt-2 actioncard">
        <div class="d-flex flex-column justify-content-between align-items-center align-items-md-start text-white shadow rounded-3 p-2 h-100">
            <h6>Climate Control</h6>
            <div class="d-flex align-items-center flex-column flex-sm-row">
                <div class="bg-success rounded-3 mx-1"><i class="fa-solid fa-spin fa-fan fa-2x p-1"></i></div>
                <h4 class="m-2">@(Climate.CurrentTemperature)c</h4>
            </div>
        </div>
    </div>
    <div class="col flex-grow-1 pt-2 actioncard">
        <div class="d-flex flex-column justify-content-between align-items-center align-items-md-start text-white shadow rounded-3 p-2 h-100">
            <h6>Charge Control</h6>
            <div class="d-flex align-items-center flex-column flex-sm-row">
                <div class="bg-success rounded-3 mx-1">
                    <i class="fa-solid fa-beat fa-charging-station fa-2x p-1" style="--fa-beat-scale: 0.9;"></i>
                </div>
                <h4 class="m-2">@(Charge.Charge)%</h4>
            </div>
        </div>
    </div>
    <div class="col flex-grow-1 pt-2 actioncard">
        <div class="d-flex flex-column justify-content-between align-items-center align-items-md-start text-white shadow rounded-3 p-2 h-100">
            <h6>Charge Limit</h6>
            <div class="d-flex align-items-center flex-column flex-sm-row">
                <div class="bg-danger rounded-3 mx-1"><i class="fa-solid fa-charging-station fa-2x p-1"></i></div>
                <h4 class="m-2">@(Charge.Charge)%</h4>
            </div>
        </div>
    </div>
    <div class="col col-12 col-md-3 h-100 pt-2
">
        <div class="bg-dark shadow rounded-3 w-100 h-100">
            <BatteryControl ChargeData="@Charge" />
        </div>
    </div>
</div>

@code {
    /* Parameters */
    [Parameter]
    public string? SelectedVin { get; set; }

    /* Controls */
    private MapControl? mapControl;

    /* Control Objects */
    public MapData Map { get; set; } = new();

    public BatteryData Charge { get; set; } = new();

    public ClimateData Climate { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await UpdateControls();
        IAuthService.OnAuthentication += OnAuthenticationChanged;
    }

    protected async void OnAuthenticationChanged(object? sender, bool authenticated)
    {
        if (authenticated)
        {
            await UpdateControls();
        }
    }

    protected async Task UpdateControls()
    {
        await UpdateMap().ConfigureAwait(false);
        await UpdateBattery().ConfigureAwait(false);
        await UpdateClimate().ConfigureAwait(false);
    }

    protected async Task UpdateMap()
    {
        var carLocationTask = ((LeafRequestService)RequestService).GetLocation();
        var carPhotoTask = ((LeafRequestService)RequestService).GetPhoto();

        Map.CarLocation = await carLocationTask;
        Map.CarPhoto = await carPhotoTask;

        await mapControl!.OnLocationChanged(this, new());
    }

    protected async Task UpdateBattery()
    {
        var batteryTask = ((LeafRequestService)RequestService).GetBattery();

        Charge = await batteryTask ?? new();
    }

    protected async Task UpdateClimate()
    {
        var climateTask = ((LeafRequestService)RequestService).GetClimate();

        Climate = await climateTask ?? new();
    }

    public void Dispose()
    {
        IAuthService.OnAuthentication -= OnAuthenticationChanged;
    }
}